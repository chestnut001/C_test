//递归函数
//递归实现顺序打印数字的每一位
//思路：大事化小
//print(123)
//print(12) 3
//print(1) 2 3
//判断是否继续递归的条件：是否大于9
int my_print(int num)
{
	if (num > 9)
		my_print(num / 10);	
	printf("%d ",num % 10);
}


//递归实现记符串长度计算：不需要定义临时变量
//思路：大事化小
//my_strlen("bit")
//1+my_strlen("it")
//1+1+my_strlen("t")
//1+1+1+my_strlen("")
//1 + 1 +1+0
//判断是否继续递归的条件：不为"\0"
int my_strlen(char* str)
{
	if (*str != '\0')
		return 1 + my_strlen(str+1);//实参是下一个字符的地址
	else
		return 0;
}

//求n的阶乘
//n!
//n*(n-1)!
//n*(n-1)*(n-2)!
//n*(n-1)*(n-2)*……*1
//判断条件：是否为1
int factorial(int num)
{
	if (num > 1)
		return num * factorial(num - 1);
	else
		return 1;
}


//汉诺塔问题
//n=1 A->C
//n=2 A->C  ==  A->B A->C B->C
//n=3 A->C  ==  (n=2 A->B) A->C (n=2 B->C)
//n=4 A->C  ==  (n=3 A->B) A->C (n=3 B->C)
//以此类推
//递归结束条件：n<=2
void my_hanoi(int n, char from, char buffer, char to)
{
	if (n == 1)
		printf("%c-->%c\n ", from, to);
	else if (n == 2)
	{
		printf("%c-->%c \n", from, buffer);
		printf("%c-->%c \n", from, to);
		printf("%c-->%c \n", buffer, to);
	}
	else
	{
		my_hanoi(n - 1, from, to, buffer);
		printf("%c-->%c \n", from, to);
		my_hanoi(n - 1, buffer, from, to);
	}
}

//青蛙跳台阶问题：每次只能跳一阶或者两阶，共有n阶台阶，有多少种跳法
//fun(n)=fun(n-1)+fun(n-2)  即 跳n阶 = （跳n-1阶再跳一阶） + （跳n-2阶再跳两阶）
//递归结束条件：n<=2
int my_jump(int n)
{
	if (n == 1)
		return 1;
	else if (n == 2)
		return 2;
	else
		return my_jump(n - 1) + my_jump(n - 2);
}
